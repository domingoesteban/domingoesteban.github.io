---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@/components/BaseHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { Icon } from "astro-icon/components";

type Props = CollectionEntry<"blog">["data"] & {
  showAuthor?: boolean;
};

const {
  title = "",
  description,
  pubDate,
  updatedDate,
  heroImage,
  icon,
  tags,
  showAuthor = true,
} = Astro.props;
import { getCollection } from "astro:content";
const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const bgClasses = [
  "hover:shadow-ppinkHover",
  "hover:shadow-pgreenHover",
  "hover:shadow-pblueHover",
  "hover:shadow-pyellow",

];
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
const images = heroImage ? import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif,svg}') : null;
if (heroImage && !images[heroImage]) throw new Error(`"${heroImage}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif,svg}"`);

const getRandomClass = () => {
  return bgClasses[Math.floor(Math.random() * bgClasses.length)];
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      h1 {
        @apply first-letter:font-kablamo first-letter:text-pblue;
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="container mx-auto md:px-10">
      <article>
        {heroImage && images ? (
          <div class="relative mb-20 text-white" transition:animate="fade">
            <span class="bg-black bg-opacity-25 w-full h-full absolute"></span>
            <div class="absolute bottom-10 md:left-20 left-6">
              <h1 class="text-4xl md:text-9xl font-semibold text-shadow">
                <span class="font-kablamo text-ppink">{title.charAt(0)}</span>{title.slice(1)}
              </h1>
              <p set:html={description} />
            </div>
            <Image src={images[heroImage]()} alt={title} class="h-96 w-full object-cover"/>
          </div>
        ) : (
          <div class="mb-10 pt-10 px-6 md:px-0">
            <h1 class="text-4xl md:text-6xl font-semibold">
              <span class="font-kablamo text-pblue">{title.charAt(0)}</span>{title.slice(1)}
            </h1>
            {description && <p class="mt-4 text-pblack" set:html={description} />}
          </div>
        )}

        <div class="text-black px-6 md:px-0">
          {(pubDate || updatedDate || icon) && (
            <div>
              <div class="text-sm text-pblack flex items-center justify-between">
                {pubDate && <FormattedDate date={pubDate} />}
                {updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )}
                {icon && <Icon name={icon} class="text-5xl" transition:animate="fade" />}
              </div>
            </div>
          )}
          <hr />
          <div class="flex justify-between py-10 md:flex-row flex-col">
            <div class={`flex flex-col gap-6 ${!showAuthor ? "w-full prose-lg" : "md:w-1/2 prose"}`}>
              <slot />
            </div>
            {showAuthor && (
              <div class="flex flex-col gap-6" transition:animate="slide">
                <ul class="flex flex-col gap-2 pt-10 md:pt-0 items-start md:items-end">
                  <p class="md:hidden font-semibold">Related:</p>
                  {
                    posts.map((post) => {
                      return (
                        <li class=`text-left rounded-lg border-1 border-black shadow-card group hover:shadow-hover transition px-2 py-2 ${getRandomClass()}` >
                          <a href={`/blog/${post.id}/`}>
                            <h4>{post.data.title}</h4>
                          </a>
                        </li>
                      );
                    })
                  }
                </ul>
                <hr />
                <p>Written by</p>
                <div class="flex -mt-4 gap-2">
                  <div>
                    <h3>Domingo Esteban</h3>
                    <p class="text-pblack">Thoughts on AI &amp; Robotics</p>
                  </div>
                </div>
                <hr/>
              </div>
            )}
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
